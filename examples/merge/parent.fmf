# Parent defines generic attribute data
description: General description
tags: [Tier1, Tier2]
time: 10
vars:
    x: 1
    y: 2
very:
    deep:
        dict:
            x: 1
            y: 2

# Child extends values instead of replacing them
/extended:
    description+: Specific description
    tags+<: [Tier0]
    tags+: [Tier3]
    time+: 5
    vars+:
        z: 3
    disabled+: true

# Minus suffix removes or subtracts parent values
/reduced:
    description-: desc.*
    tags-: [Tier2]
    time-: 5
    vars-: [y]

# It is possible to merge deeply nested dictionaries
/buried:
    very+:
        deep+:
            dict+:
                x+: 1
                y-: 1
                z: 0

# Regexp used to change values - note that the second tag regexp cannot be applied
# as Tier2 is already modified into 't2'
/regexp:
    description~: "/.en(.*) .*/gen\\1/"
    tags~:
    - '/Tier(.)/t\1/'
    - /Tier2/t3/

/minus-regexp:
    description-~: '.*'
    tags-~:
    - '.ier1'
    vars-~:
    - 'y'

# Inheritance should be applied in the given order
/order:
    tag: [one, two]

    /add-first:
        tag+: [three, four]
        tag-: [two, three]

    /remove-first:
        tag-: [two, three]
        tag+: [three, four]
